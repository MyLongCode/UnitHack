<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnitApi</name>
    </assembly>
    <members>
        <member name="M:UnitApi.Controllers.ItemController.GetAllItems(System.String,System.Int32,Logic.Restaurant.Models.Sort)">
             <summary>
             Получить все товары
             </summary>
             <remarks>
            
            
                 Сортировки 
                 {
                    "NameAsc" : По названию по возрастанию алфавита, 
                    "NameDesc" : По названию по убыванию алфавита,
                    "IdAsc" : Сначала старые,
                    "IdDesc": Сначала новые,
                    "RatingAsc" : Сначала плохие, 
                    "RatingDesc" : Сначала хорошие,
                    "CostAsc" : Сначала дешёвые,
                    "CostDesc": Сначала дорогие
                 }
             
             page - страничка для пагинации (вроде выдаёт по 10 :) )
             
             </remarks>
             <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ItemController.CreateItem(UnitApi.dto.Item.CreateItemRequest)">
            <summary>
            Создать новый товар
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ItemController.DeleteItem(System.Int32)">
            <summary>
            Удалить товар по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ItemController.GetItemById(System.Int32)">
            <summary>
            Получить товар по Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ReviewController.CreateReview(UnitApi.dto.Review.CreateReviewRequest,System.Int32)">
            <summary>
            Оставить отзыв для товара
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ReviewController.GetReviewsByItemId(System.Int32)">
            <summary>
            Получить все отзывы для товара
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ReviewController.GetReviewsForModerate">
            <summary>
            Получить все неотмодерированные отзывы
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ReviewController.VerifiedReview(System.Int32)">
            <summary>
            Принять отзыв по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.ReviewController.RejectReview(System.Int32)">
            <summary>
            Отклонить отзыв по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.UserController.RegisterUser(Api.Controllers.User.Requests.UserRegisterRequest)">
            <summary>
            Зарегать пользователя
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.UserController.GetAllUsers">
            <summary>
            Получить всех пользователей
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnitApi.Controllers.UserController.Token(Api.Controllers.User.Requests.GetUserTokenRequest)">
            <summary>
            Получить токен
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
    </members>
</doc>
